{% extends "base.njk" %}
{% block content %}
  <section class="section">
    <div class="container">
      <div class="columns is-centered">
        <div class="column is-6">
          <button class="button is-light mb-3" onclick="window.history.back()">
            <span class="icon">
              <i class="fas fa-arrow-left"></i>
            </span>
            <span>Back to Calendar</span>
          </button>
          <div class="card">
            <div class="card-content">
            <h1 id="reservation-title" class="title is-3">Reserve Your Spot</h1>
            <div class="mb-4">
              <p>
                <strong>Time:</strong>
                <span id="spot-time">{{ startDate }} -- {{ endDate }}</span>
              </p>
            </div>
            <div id="error-message" class="notification is-danger" style="display: none;">
              <p id="error-text"></p>
            </div>
            <form id="reservation-form">
              <input type="hidden" name="spotId" value="{{ spotId }}">
                <input type="hidden" name="timezone" id="timezone-field">
                  <div class="field form-field">
                    <label class="label">Name</label>
                    <div class="control has-icons-left">
                      <input class="input" type="text" name="visitorName" id="visitorName" minlength="2">
                        <span class="icon is-small is-left">
                          <i class="fas fa-user"></i>
                        </span>
                      </div>
                    </div>
                    <div class="field form-field">
                      <label class="label">Email</label>
                      <div class="control has-icons-left">
                        <input class="input" type="email" name="visitorEmail" id="visitorEmail">
                          <span class="icon is-small is-left">
                            <i class="fas fa-envelope"></i>
                          </span>
                        </div>
                        <p class="help is-danger" id="email-error" style="display: none;">Please enter a valid email address</p>
                      </div>
                      <div class="field form-field">
                        <label class="label">Comment (optional)</label>
                        <div class="control">
                          <textarea class="textarea" name="comment" id="comment" rows="3"></textarea>
                        </div>
                      </div>
                      <div class="field">
                        <div class="control">
                          <button type="submit" class="button is-primary is-fullwidth">
                            <span class="icon">
                              <img src="/images/hamaki-logo.svg" alt="Hamaki" style="width: 20px; height: 20px;"></span>
                              <span>Reserve Spot</span>
                            </button>
                          </div>
                        </div>
                      </form>
                      <div id="success-message" style="display: none; text-align: center;">
                        <span class="icon has-text-success">
                          <i class="fas fa-check-circle fa-3x"></i>
                        </span>
                        <h2 class="title is-4 mt-3">Reservation Confirmed!</h2>
                        <div class="buttons is-centered mt-4">
                          <a id="view-reservation-btn" class="button is-primary" href="#">
                            <span class="icon">
                              <i class="fas fa-calendar-check"></i>
                            </span>
                            <span>Go to Reservation Page</span>
                          </a>
                          <button id="more-confetti-btn" class="button is-success is-light">
                            <span class="icon">
                              <i class="fas fa-star"></i>
                            </span>
                            <span>More confetti</span>
                          </button>
                        </div>
                      </div>
                    </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/moment-timezone/0.5.43/moment-timezone-with-data.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.6.0/dist/confetti.browser.min.js"></script>
            <script>
              // Cookie functions
              function setCookie(name, value, days) {
                const expires = new Date();
                expires.setTime(expires.getTime() + (days * 24 * 60 * 60 * 1000));
                document.cookie = name + '=' + value + ';expires=' + expires.toUTCString() + ';path=/';
              }
              function getCookie(name) {
                const nameEQ = name + '=';
                const ca = document.cookie.split(';');
                for (let i = 0; i < ca.length; i++) {
                  let c = ca[i];
                  while (c.charAt(0) === ' ') 
                    c = c.substring(1, c.length);
                  
                  if (c.indexOf(nameEQ) === 0) 
                    return c.substring(nameEQ.length, c.length);
                  
                }
                return null;
              }
              // Load saved form data
              const savedName = getCookie('visitorName');
              const savedEmail = getCookie('visitorEmail');
              if (savedName) 
                document.getElementById('visitorName').value = savedName;
              
              if (savedEmail) 
                document.getElementById('visitorEmail').value = savedEmail;
              
              // Set client timezone
              const clientTimezone = moment.tz.guess();
              document.getElementById('timezone-field').value = clientTimezone;
              // Format spot time
              const spotTimeEl = document.getElementById('spot-time');
              const startTime = '{{ startDate }}';
              const endTime = '{{ endDate }}';
              if (startTime && startTime !== 'undefined' && endTime && endTime !== 'undefined') {
                const startFormatted = moment(startTime).format('MMMM D, YYYY [at] h:mm A');
                const endFormatted = moment(endTime).format('h:mm A');
                spotTimeEl.textContent = `${startFormatted} - ${endFormatted}`;
              }
              // Confetti function
              function fireConfetti() {
                const duration = 3 * 1000;
                const animationEnd = Date.now() + duration;
                const defaults = {
                  startVelocity: 30,
                  spread: 360,
                  ticks: 60,
                  zIndex: 0
                };
                function randomInRange(min, max) {
                  return Math.random() * (max - min) + min;
                }
                const interval = setInterval(function () {
                  const timeLeft = animationEnd - Date.now();
                  if (timeLeft <= 0) {
                    return clearInterval(interval);
                  }
                  const particleCount = 50 * (timeLeft / duration);
                  confetti(Object.assign({}, defaults, {
                    particleCount,
                    origin: {
                      x: randomInRange(0.1, 0.3),
                      y: Math.random() - 0.2
                    }
                  }));
                  confetti(Object.assign({}, defaults, {
                    particleCount,
                    origin: {
                      x: randomInRange(0.7, 0.9),
                      y: Math.random() - 0.2
                    }
                  }));
                }, 250);
              }
              // Form validation and submission
              const form = document.getElementById('reservation-form');
              const emailInput = document.getElementById('visitorEmail');
              const emailError = document.getElementById('email-error');
              const nameInput = document.getElementById('visitorName');
              emailInput.addEventListener('input', () => {
                if (emailInput.value && ! emailInput.validity.valid) {
                  emailError.style.display = 'block';
                } else {
                  emailError.style.display = 'none';
                }
              });
              const errorMessage = document.getElementById('error-message');
              const errorText = document.getElementById('error-text');
              function showError(message) {
                errorText.textContent = message;
                errorMessage.style.display = 'block';
                setTimeout(() => {
                  errorMessage.style.display = 'none';
                }, 5000);
              }
              form.addEventListener('submit', async (e) => {
                e.preventDefault();
                errorMessage.style.display = 'none';
                // Validate name length if provided
                if (nameInput.value && nameInput.value.length < 2) {
                  showError('Name must be at least 2 characters long');
                  return;
                }
                // Validate email format if provided
                if (emailInput.value && ! emailInput.validity.valid) {
                  emailError.style.display = 'block';
                  return;
                }
                // Save to cookies
                if (nameInput.value) 
                  setCookie('visitorName', nameInput.value, 365);
                
                if (emailInput.value) 
                  setCookie('visitorEmail', emailInput.value, 365);
                
                // Submit form
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());
                try {
                  const response = await fetch('/local/reserve', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                  });
                  if (response.ok) {
                    const result = await response.json();
                    console.log('Reservation response:', result);
                    // Store reservation ID for later use - handle both nested and flat structures
                    window.reservationId = result.reservation?.id || result.id;
                    console.log('Reservation ID:', window.reservationId);
                    // Fire confetti
                    fireConfetti();
                    // Slide up form fields
                    const formFields = document.querySelectorAll('.form-field');
                    formFields.forEach((field, index) => {
                      setTimeout(() => {
                        field.style.transition = 'all 0.5s ease';
                        field.style.transform = 'translateY(-100%)';
                        field.style.opacity = '0';
                      }, index * 100);
                    });
                    // Hide form and show success message
                    setTimeout(() => {
                      const titleEl = document.getElementById('reservation-title');
                      if (titleEl) {
                        titleEl.textContent = 'Spot has been reserved.';
                      }
                      if (document && document.title) {
                        document.title = 'Spot has been reserved. - Hamaki';
                      }
                      form.style.display = 'none';
                      document
                        .getElementById('success-message')
                        .style
                        .display = 'block';
                      const moreConfettiBtn = document.getElementById('more-confetti-btn');
                      if (moreConfettiBtn) {
                        moreConfettiBtn.addEventListener('click', () => {
                          fireConfetti();
                        });
                      }
                      const viewReservationBtn = document.getElementById('view-reservation-btn');
                      if (viewReservationBtn && window.reservationId) {
                        viewReservationBtn.href = '/reservation/' + window.reservationId;
                      } else {
                        console.error('Cannot set reservation link - reservationId is:', window.reservationId);
                      }
                    }, 500);
                  } else {
                    const errorData = await response.json().catch(() => ({}));
                    showError(
                    errorData.message || 'Failed to create reservation. Please try again.');
                  }
                } catch (error) {
                  console.error('Error:', error);
                  showError('An error occurred. Please try again.');
                }
              });
            </script>
          {% endblock %}